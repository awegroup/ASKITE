# kite name
kite_name: !!str "V3_25"

# sim_name, straight/crosswind/circular
sim_name: !!str "straight"

## V3_25
# for testing straight-symmetric: vel_wind [20,0,2.6], stiffness = 5e5
# for testing crosswind vel_wind [0,0,4], vel_kite [-20,0,0], k=6e5

## V9_60C
# straight-symmetric v_wind[10,0,1]

## Actuation
##TODO: remove these old ones (first 3) you don't actually use them
# depower
u_p: !!float 1.0
depower_tape_extension_percentage: !!float 8.0
# steering
delta_ls_ini: !!float 0.01
## NEW - in meters
depower_tape_extension_step: !!float 0.01
depower_tape_final_extension: !!float 0.01
steering_tape_extension_step: !!float 0.01
steering_tape_final_extension: !!float 0.03

# Aerodynamic -ChildClass: aero
aero:
  ring_geometry: !!str "5fil"
  model: !!str "VSM"
  n_iter: !!int 1500
  error_limit: !!float 1.0e-5
  # used to be: 1e-5
  relax_factor: !!float 3.0e-2
  n_splits: !!int 2
  # drag-coefficients
  cd_cylinder: !!float 1.1
  cd_shear_cylinder: !!float 0.02
  cd_multiplier: !!float 1.0
  # for NN
  n_chordwise_aero_nodes: !!int 10

# Solve -  ChildClass: solver
solver:
  # method: either 'root' or 'newton'
  method: !!str "root"
  # tolerance in N, tol < calculated_total_force
  tol: !!float 20.0
  # 'root' settings (128s), use to be 500
  max_fev: !!int 2000
  integration_method: !!str "df-sane"

  # 'newton' settings (178s)
  newton_rtol: !!float 10.0
  newton_max_iter: !!int 2000
  newton_disp: !!bool false

  # alex psm settings (fed in through params-dict)
  # damping_constant --> self.__c and is a ratio --> dv = self.__c * dv
  damping_constant: !!float .9
  is_with_visc_damping: !!bool true
  dt: !!float 0.01
  n_time_steps: !!int 10000
  abs_tol: !!float 1.E-50
  rel_tol: !!float 1.E-5
  max_iter: !!int 50000
  
#  ChildClass: aerostructural
aero_structural:
  max_iter: !!int 2500
  it_check: !!int 5
  tol: !!float 10
  # 1e-3 this is <5mm, later change to 1e-4/e-5
  crosswind_max_iter: !!int 50
  crosswind_tol: !!float 1.0e-2
  crosswind_relax_factor: !!float 0.5

tether: # set to zero, if you don't want tether force
  diameter: !!float 0.04
  length: !!float 100.0
  density: !!float 1.0

## output_settings:
is_print_mid_results: !!bool true
is_with_initial_plot: !!bool false
is_with_plotly_plot: !!bool false
is_with_aero_geometry: !!bool true
is_with_printing: !!bool true

## plotting
is_with_plotting: !!bool true
plot_format: !!str "png"
plot_elev: !!seq [9.14,9.14]
plot_azim: !!seq [90,230]

## animation
is_with_animation: !!bool true
animation_elev: !!float 9.14
animation_azim: !!float 90

## simulation_settings
is_run_only_1_time_step: !!bool true
is_with_velocity_initialisation: !!bool false
n_vel_initialisation_steps: !!int 20
# NN or MSc_Oriol
coupling_method: !!str "NN"

is_from_filename: !!bool false
is_with_initial_point_velocity: !!bool false
is_billowing_on: !!bool true
is_with_gravity: !!bool false
is_with_aero_bridle: !!bool false
is_with_aero_tether: !!bool true
bridle_initial_compression_factor:
  !!float 1.0
  # multiplication with initial length
# divides initial geometry by this factor  
geometric_scaling_factor: !!float 1

#TODO: these are now hardcoded in "solver_utils"
## crosswind flight settings
tol_fx_ratio_to_fz: !!float 0.005

## physical_constants:
grav_constant: !!seq [0, 0, -9.81]
rho: !!float 1.225
mu: !!float 1.789e-5