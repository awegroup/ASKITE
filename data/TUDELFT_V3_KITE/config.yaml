## inflow conditions
vel_wind: !!seq [12, 0, 4]
vel_kite: !!seq [0, 0, 0]
acc_kite: !!seq [0, 0, 0]

## case settings
structural_solver: !!str "kite_fem" #"kite_fem" or "pss"
is_with_gravity: !!bool true
is_with_aero_bridle: !!bool false
is_with_aero_tether: !!bool false
is_run_only_1_time_step: !!bool false
is_with_initial_point_velocity: !!bool false
is_with_forcing_symmetry: !!bool false

## actuation settings
power_tape_extension_step: !!float 0 #0.02 #0.01
power_tape_final_extension: !!float 0 #0.3 #0.05
steering_tape_extension_step: !!float 0
steering_tape_final_extension: !!float 0.0

## output settings
is_with_initial_structure_plot: !!bool true
is_with_coupling_plot_per_iteration: !!bool false
is_with_struc_plot_per_iteration: !!bool false
is_with_aero_plot_per_iteration: !!bool false
is_with_final_plot: !!bool true

## aerodynamic
aerodynamic:
  n_aero_panels_per_struc_section: !!int 3
  spanwise_panel_distribution: !!str "uniform"
  max_iterations: !!int 5000
  allowed_error: !!float 1e-6
  relaxation_factor: !!float 0.01
  reference_point: !!seq [0.0, 0.0, 0.0]

## aerodynamic bridle
aerodynamic_bridle:
  cd_cable: !!float 1.1
  cf_cable: !!float 0.01
  
## structural pss
structural_pss:
  dt: !!float 0.01  #crucial that this remains low
  n_internal_time_steps: !!int 20
  abs_tol: !!float 1.0e-50
  rel_tol: !!float 1.0e-5
  max_iter: !!int 500
  fixed_point_indices: [0] #this is the bridle point / KCU

## structural kite_fem
structural_kite_fem:
  max_iterations: !!int 1000
  tolerance: !!float 5 # smaller than ## coupled tol value
  step_limit: !!float 0.1
  relax_init: !!float 0.25
  relax_update: !!float 0.95
  k_update: !!int 1
  I_stiffness: !!int 25 #V3 kite: 25
  print_info: !!bool false
  
## aero2struc
aero2struc:
  coupling_method: !!str "NN"
  eps: !!float 1e-6
  power_for_inverse_weighting: !!float 2.0

## coupled
aero_structural_solver:
  max_iter: !!int 100
  it_check: !!int 5
  tol: !!float 25

## Physical constants
grav_constant: !!seq [0, 0, 9.81]
rho: !!float 1.225 # air density in kg/m^3
mu: !!float 1.789e-05 # dynamic viscosity in kg/(m*s)

# power_tape_index: 
# # Stifnesses and damping
# # va ~10 1e4 #2024/03/24
# # va ~20 5e4 #2024/02/24
# # va ~30 6e5
# # va ~40 6.5e5

# tubular_frame_stiffness: !!float 2e3 #5e4
# bridle_line_stiffness: !!float 2e3 #5e4
# trailing_edge_stiffness: !!float 2e3 #5e4
# canopy_stiffness: !!float 1e3
# tubular_frame_damping: !!float 0.0
# bridle_line_damping: !!float 0.0
# trailing_edge_damping: !!float 0.0
# canopy_damping: !!float 0.0


##TODO:
# - write this as material
# - where the material has properties like EA, and damping propertional to EA, and density
# - Then you only have to specify: name, l0, d, material
# - And then get EA, and rho from [material][EA], [material][rho]


# fixed_node_indices: !!seq [0, 9,10,11,12]

# # KCU
# # N.Gechiere     --> CD: 0.47, Diameter: 0.38
# # M.Schelbergen  --> CD: 1.0, Area: 0.25 (would be diam: .565m)
# kcu:
#   drag_coefficient: !!float 0.47
#   diameter: !!float 0.38
#   index: !!int 0
#   mass: !!float 8.4

# # Masses [kg]
# pulley_mass: !!float 0.1
# wing_mass: !!float 11

# sim_name, straight/crosswind/circular
# sim_name: !!str "straight"  # <-- NOT USED

## Actuation
##TODO: remove these old ones (first 3) you don't actually use them
# depower
# u_p: !!float 1.0  # <-- NOT USED
# power_tape_extension_percentage: !!float 8.0  # <-- NOT USED
# steering
# delta_ls_ini: !!float 0.00  # <-- NOT USED
# ## NEW - in meters
# power_tape_extension_step: !!float 0.00 #0.01
# power_tape_final_extension: !!float 0.00 #0.05
# steering_tape_extension_step: !!float 0
# steering_tape_final_extension: !!float 0.0



  # crosswind_max_iter: !!int 50
  # crosswind_tol: !!float 0.01
  # crosswind_relax_factor: !!float 0.5

# tether: # set to zero, if you don't want tether force
#   diameter: !!float 0.04  # <-- NOT USED
#   length: !!float 100.0   # <-- NOT USED
#   density: !!float 1.0    # <-- NOT USED

## output_settings:
# is_print_mid_results: !!bool true

# is_with_plotly_plot: !!bool false
# is_with_aero_geometry: !!bool false
# is_with_printing: !!bool false

## plotting
# is_with_plotting: !!bool false
# plot_format: !!str "png"
# plot_elev: !!seq [9.14, 9.14]
# plot_azim: !!seq [90, 230]

## animation
# is_with_animation: !!bool false
# animation_fps: !!int 10
# animation_dpi: !!int 100
# animation_bitrate: !!int 2000
# animation_elev: !!float 9.14
# animation_azim: !!float 230.0

## simulation_settings
# is_with_velocity_initialisation: !!bool false
# n_vel_initialisation_steps: !!int 10
# coupling_method: !!str "NN"
# is_from_filename: !!bool false
# is_with_initial_point_velocity: !!bool false
# is_billowing_on: !!bool true
# is_with_gravity: !!bool true
# is_with_aero_bridle: !!bool true
# is_with_aero_tether: !!bool true
# bridle_initial_compression_factor: !!float 1.0
# geometric_scaling_factor: !!float 1.0




#TODO: these are now hardcoded in "solver_utils"
## crosswind flight settings
# tol_fx_ratio_to_fz: !!float 0.0  # <-- NOT USED


# settings needed for crosswind & circular case here set to default values
# tol_fx_ratio_to_fz: !!float 0  # <-- NOT USED
# tol_vk_optimization: !!float 0  # <-- NOT USED
# vk_x_initial_guess_factor_of_vw: !!float 0  # <-- NOT USED
# is_with_varying_va: !!bool false  # <-- NOT USED
# r_0_initial: !!float 0  # <-- NOT USED

# Straight case 
# is_with_vk_optimization: false  # <-- NOT USED
# is_circular_case: false         # <-- NOT USED
# is_print_intermediate_results: true  # <-- NOT USED
# is_with_gravity: false          # <-- NOT USED
# ### inflow conditions
# vel_wind: !!seq [12, 0, 2]
# vel_kite: !!seq [0, 0, 0]
# acc_kite: !!seq [0, 0, 0]

# # Crosswind case
# is_with_vk_optimization: true
# is_circular_case: false
# is_print_intermediate_results: false
# is_with_gravity: false
# ### inflow conditions
# vel_wind: !!seq [0,0,4]
# # This is an initial guess for the kite velocity
# vel_kite: !!seq [-20, 0, 0]
# acc_kite: !!seq [0, 0, 0]
# ### other
# tol_fx_ratio_to_fz: !!float 0.005
# tol_vk_optimization: !!float 0.1
# vk_x_initial_guess_factor_of_vw: !!float -5.0